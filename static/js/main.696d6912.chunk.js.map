{"version":3,"sources":["components/Keypad.js","components/Output.js","components/Panel.js","lib/evaluate.js","App.js","reportWebVitals.js","index.js"],"names":["Keypad","keypress","className","type","onClick","map","k","i","Output","text","outputEl","useRef","useEffect","current","scrollTop","scrollHeight","ref","length","Panel","useState","setText","key","prev","test","replace","String","expression","nums","matchAll","match","parseFloat","ops","splice","op","evaluate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.696d6912.chunk.js","sourcesContent":["function Keypad({keypress}) {\n  let keys = ['/', '*', '-', '7', '8', '9', '4', '5', '6', '1', '2', '3', '.'];\n  return (\n    <div className=\"container\">\n      <button type=\"button\" className=\"key1\" onClick={() => keypress('C')}>C</button>\n      <button type=\"button\" className=\"key2\" onClick={() => keypress('+')}>+</button>\n      <button type=\"button\" className=\"key3\" onClick={() => keypress('0')}>0</button>\n      <button type=\"button\" className=\"key4\" onClick={() => keypress('=')}>=</button>\n      {keys.map((k, i) => (\n        <button type=\"button\" onClick={() => keypress(k)} key={i}>\n          {k}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Keypad;\n","import { useEffect, useRef } from \"react\";\n\nfunction Output({ text }) {\n  let outputEl = useRef(null);\n\n  // scroll to the bottom\n  useEffect(() => {\n    outputEl.current.scrollTop = outputEl.current.scrollHeight;\n  }, [text]);\n\n  return (\n    <div\n      ref={outputEl}\n      // shrink font-size when amount of text increases\n      className={`output ${text.length >= 10 ? \" smaller\" : \"\"} ${\n        text.length >= 20 ? \" smallest\" : \"\"\n      }`}\n    >\n      {text}\n    </div>\n  );\n}\n\nexport default Output;\n","import Keypad from \"./Keypad\";\nimport Output from \"./Output\";\nimport { useState } from \"react\";\nimport evaluate from \"./../lib/evaluate\";\n\nfunction Panel() {\n  let [text, setText] = useState(\"\");\n\n  function keypress(key) {\n    let prev = text;\n    if (\n      text === \"NaN\" ||\n      text === \"Infinity\" ||\n      text === \"-Infinity\" ||\n      text === \"Err: Division by 0\"\n    ) {\n      prev = \"\";\n    }\n    switch (key) {\n      case \"C\":\n        setText(\"\");\n        break;\n      case \"/\":\n      case \"*\":\n      case \"+\":\n        // only add an operator after a number\n        if (/\\d$/.test(prev)) setText(prev + key);\n        break;\n      case \"-\":\n        // preceded by + change to minus\n        if (/\\+$/.test(prev)) setText(prev.replace(/.$/, \"-\"));\n        // preceded by - change to plus\n        else if (/\\d-$/.test(prev)) setText(prev.replace(/.$/, \"+\"));\n        // preceded by - but that is the whole string\n        else if (/^-$/.test(prev)) setText(prev.replace(/.$/, \"\"));\n        else setText(prev + \"-\");\n        break;\n      case \".\":\n        // don't put two decimal points in a row\n        if (!/\\.\\d*$/.test(prev)) setText(prev + key);\n        break;\n      case \"=\":\n        if (/^.*\\d+$/.test(prev)) {\n          setText(String(evaluate(prev)));\n        }\n        break;\n      default:\n        setText(prev + key);\n    }\n  }\n\n  return (\n    <span className=\"panel\">\n      <Output text={text}></Output>\n      <Keypad keypress={keypress}></Keypad>\n    </span>\n  );\n}\n\nexport default Panel;\n","export default function evaluate(expression) {\n  // extract numbers\n  let nums = [\n    ...expression.matchAll(/(?:(?<=[*/+-]|^)-)?\\d*[.]?\\d+(?:e[+-]\\d+)?/g),\n  ].map((match) => parseFloat(match[0]));\n\n  // extract operators\n  let ops = [...expression.matchAll(/(?<![e*/+-]|^)[*/+-]/g)].map(\n    (match) => match[0]\n  );\n\n  // perform * and / operators\n  let i = 0;\n  while (i < ops.length) {\n    if (ops[i] === \"*\") {\n      nums[i] *= nums[i + 1];\n      nums.splice(i + 1, 1);\n      ops.splice(i, 1);\n      continue;\n    }\n    if (ops[i] === \"/\") {\n      if (!+nums[i + 1]) return \"Err: Division by 0\";\n      nums[i] /= nums[i + 1];\n      nums.splice(i + 1, 1);\n      ops.splice(i, 1);\n      continue;\n    }\n    i++;\n  }\n\n  // perform + and - operators\n  for (let op of ops) {\n    if (op === \"+\") {\n      nums[0] += nums[1];\n      nums.splice(1, 1);\n      ops.splice(0, 1);\n    }\n    if (op === \"-\") {\n      nums[0] -= nums[1];\n      nums.splice(1, 1);\n      ops.splice(0, 1);\n    }\n  }\n\n  return nums[0];\n}\n","import \"./assets/css/main.css\";\nimport Panel from \"./components/Panel\";\n\nfunction App() {\n  return (\n    <div className=\"app light\">\n      <Panel></Panel>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}